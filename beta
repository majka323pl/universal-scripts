local service = 0; --Set your Platoboost Id (Zmień to na swoje ID z Platoboost!)
local secret = ""; --Set Your Platoboost Api key (Zmień to na swój klucz API z Platoboost!)
local useNonce = true;

-- Zapewnienie, że onMessage jest funkcją i działa
local onMessage = function(message)
    local StarterGui = game:GetService("StarterGui")
    if StarterGui then
        StarterGui:SetCore("ChatMakeSystemMessage", { Text = message; })
    end
end;

local player = game.Players.LocalPlayer
local MarketplaceService = game:GetService("MarketplaceService")
local StarterGui = game:GetService("StarterGui")

--- KONFIGURACJA ---
local GAMEPASS_ID = 1296972626 -- <-- TUTAJ WPROWADŹ ID SWOJEGO GAMEPASSA!
--------------------

-- Flagi i inicjalizacja
local hasGamePass = false
local initialGamePassCheckDone = false -- Flaga, aby powiadomienie o statusie Premium pojawiło się tylko raz

repeat task.wait(1) until game:IsLoaded() and player; -- Upewnij się, że gracz i gra są załadowane

local requestSending = false;

-- Fallbacki dla środowisk, które mogą nie mieć wbudowanych funkcji
local fSetClipboard = setclipboard or toclipboard or function(text) warn("setclipboard/toclipboard not found!"); end
local fRequest = request or http_request or function(options) warn("request/http_request not found!"); return {StatusCode = 0, Body = "{}"}; end
local fStringChar = string.char
local fToString = tostring
local fStringSub = string.sub
local fOsTime = os.time
local fMathRandom = math.random
local fMathFloor = math.floor
local fGetHwid = gethwid or function() return player.UserId end -- Używamy UserId jako HWID jeśli gethwid nie istnieje

local cachedLink, cachedTime = "", 0;
local HttpService = game:GetService("HttpService")

-- Funkcja do wysyłania powiadomień
local function sendNotification(title, text)
    if StarterGui then
        StarterGui:SetCore("SendNotification", {
            Title = title,
            Text = text,
            Icon = "rbxassetid://102860171689689", -- Możesz użyć swojej ikony asset ID
            Duration = 5
        })
    end
end

-- Funkcja sprawdzająca status Premium
local function checkGamePassStatus()
    local success, result = pcall(function()
        return MarketplaceService:UserOwnsGamePassAsync(player.UserId, GAMEPASS_ID)
    end)

    if success then
        hasGamePass = result
        if not initialGamePassCheckDone then
            if hasGamePass then
                sendNotification("Klucz", "Wykryto Premium! Pomijam system kluczy.")
            else
                sendNotification("Klucz", "Brak Premium. Wymagany klucz.")
            end
            initialGamePassCheckDone = true
        end
    else
        warn("Błąd podczas sprawdzania statusu Premium:", result)
        sendNotification("Klucz", "Nie można sprawdzić statusu Premium. Spróbuj ponownie.")
    end
    return hasGamePass
end

-- Nasłuchiwanie na zakończenie próby zakupu Premium (gdy gracz kupi w trakcie gry)
MarketplaceService.PromptGamePassPurchaseFinished:Connect(function(userId, gamePassId, wasPurchased)
    if userId == player.UserId and gamePassId == GAMEPASS_ID then
        if wasPurchased then
            sendNotification("Klucz", "Premium kupione pomyślnie! Ładowanie skryptu...")
            hasGamePass = true
            -- Zniszcz GUI keysystemu, jeśli istnieje i jest widoczne
            if _G.ScreenGui and _G.ScreenGui.Parent then
                _G.ScreenGui:Destroy()
            end
            -- Uruchom główny skrypt po zakupie Premium
            -- <--- TUTAJ WPROWADŹ URL SWOJEGO GŁÓWNEGO SKRYPTU! (np. "https://raw.githubusercontent.com/majka323pl/universal-scripts/refs/heads/main/scripts")
            loadstring(game:HttpGet("https://raw.githubusercontent.com/majka323pl/universal-scripts/refs/heads/main/scripts"))()
        else
            sendNotification("Klucz", "Anulowano zakup Premium.")
        end
        checkGamePassStatus() -- Upewnij się, że status jest zaktualizowany
    end
end)


function lEncode(data)
    return HttpService:JSONEncode(data)
end
function lDecode(data)
    local success, decoded = pcall(HttpService.JSONDecode, HttpService, data)
    if success then
        return decoded
    else
        warn("Failed to decode JSON:", decoded)
        return nil
    end
end

local function lDigest(input)
    local inputStr = tostring(input)
    local hashHex = ""
    for i = 1, #inputStr do
        hashHex = hashHex .. string.format("%02x", string.byte(inputStr, i))
    end
    return hashHex
end

local host = "https://api.platoboost.com";
local hostResponse = fRequest({
    Url = host .. "/public/connectivity",
    Method = "GET"
});
if hostResponse.StatusCode ~= 200 and hostResponse.StatusCode ~= 429 then -- Poprawiona logika warunku
    host = "https://api.platoboost.net";
end

function cacheLink()
    if cachedTime + (10*60) < fOsTime() then
        local response = fRequest({
            Url = host .. "/public/start",
            Method = "POST",
            Body = lEncode({
                service = service,
                identifier = lDigest(fGetHwid())
            }),
            Headers = {
                ["Content-Type"] = "application/json"
            }
        });

        if response.StatusCode == 200 then
            local decoded = lDecode(response.Body);
            if decoded and decoded.success == true then
                cachedLink = decoded.data.url;
                cachedTime = fOsTime();
                return true, cachedLink;
            else
                onMessage(decoded and decoded.message or "Unknown error caching link.");
                return false, decoded and decoded.message or "Unknown error caching link.";
            end
        elseif response.StatusCode == 429 then
            local msg = "you are being rate limited, please wait 20 seconds and try again.";
            onMessage(msg);
            return false, msg;
        else
            local msg = "Failed to cache link. Status code: " .. response.StatusCode;
            onMessage(msg);
            return false, msg;
        end
    else
        return true, cachedLink;
    end
end

-- Wywołanie cacheLink na początku skryptu, aby spróbować pobrać link do klucza
cacheLink();

local generateNonce = function()
    local str = ""
    for _ = 1, 16 do
        str = str .. fStringChar(fMathFloor(fMathRandom() * (122 - 97 + 1)) + 97)
    end
    return str
end


for _ = 1, 5 do
    local oNonce = generateNonce();
    task.wait(0.2)
    if generateNonce() == oNonce then
        local msg = "platoboost nonce error.";
        onMessage(msg);
        error(msg);
    end
end

local copyLink = function()
    local success, link = cacheLink();

    if success then
        fSetClipboard(link);
        sendNotification("Klucz", "Link do klucza został skopiowany do schowka!")
    else
        sendNotification("Klucz", "Nie udało się skopiować linku. Spróbuj ponownie później.")
    end
end

local redeemKey = function(key)
    local nonce = generateNonce();
    local endpoint = host .. "/public/redeem/" .. fToString(service);

    local body = {
        identifier = lDigest(fGetHwid()),
        key = key
    }

    if useNonce then
        body.nonce = nonce;
    end

    local response = fRequest({
        Url = endpoint,
        Method = "POST",
        Body = lEncode(body),
        Headers = {
            ["Content-Type"] = "application/json"
        }
    });

    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded and decoded.success == true then
            if decoded.data.valid == true then
                if useNonce then
                    if decoded.data.hash == lDigest("true" .. "-" .. nonce .. "-" .. secret) then
                        return true;
                    else
                        onMessage("failed to verify integrity.");
                        return false;
                    end
                else
                    return true;
                end
            else
                onMessage("key is invalid.");
                return false;
            end
        else
            if decoded and fStringSub(decoded.message, 1, 27) == "unique constraint violation" then
                onMessage("you already have an active key, please wait for it to expire before redeeming it.");
                return false;
            else
                onMessage(decoded and decoded.message or "Unknown error redeeming key.");
                return false;
            end
        end
    elseif response.StatusCode == 429 then
        onMessage("you are being rate limited, please wait 20 seconds and try again.");
        return false;
    else
        onMessage("server returned an invalid status code, please try again later. Status: " .. response.StatusCode);
        return false;
    end
end


local verifyKey = function(key)
    if requestSending == true then
        onMessage("a request is already being sent, please slow down.");
        return false;
    else
        requestSending = true;
    end

    local nonce = generateNonce();
    local endpoint = host .. "/public/whitelist/" .. fToString(service) .. "?identifier=" .. lDigest(fGetHwid()) .. "&key=" .. key;

    if useNonce then
        endpoint = endpoint .. "&nonce=" .. nonce;
    end
    local response = fRequest({
        Url = endpoint,
        Method = "GET",
    });

    requestSending = false;

    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded and decoded.success == true then
            if decoded.data.valid == true then
                if useNonce then
                    return true;
                else
                    return true;
                end
            else
                if fStringSub(key, 1, 4) == "FREE_" then
                    return redeemKey(key);
                else
                    onMessage("key is invalid.");
                    return false;
                end
            end
        else
            onMessage(decoded and decoded.message or "Unknown error verifying key.");
            return false;
        end
    elseif response.StatusCode == 429 then
        onMessage("you are being rate limited, please wait 20 seconds and try again.");
        return false;
    else
        onMessage("server returned an invalid status code, please try again later. Status: " .. response.StatusCode);
        return false;
    end
end


local getFlag = function(name)
    local nonce = generateNonce();
    local endpoint = host .. "/public/flag/" .. fToString(service) .. "?name=" .. name;

    if useNonce then
        endpoint = endpoint .. "&nonce=" .. nonce;
    end

    local response = fRequest({
        Url = endpoint,
        Method = "GET",
    });

    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded and decoded.success == true then
            if useNonce then
                if decoded.data.hash == lDigest(fToString(decoded.data.value) .. "-" .. nonce .. "-" .. secret) then
                    return decoded.data.value;
                else
                    onMessage("failed to verify integrity.");
                    return nil;
                end
            else
                return decoded.data.value;
            end
        else
            onMessage(decoded and decoded.message or "Unknown error getting flag.");
            return nil;
        end
    else
        return nil;
    end
end

---
--- **Logika Premium i Keysystemu** ---
---

-- Sprawdź status Premium na początku
local playerHasGamePass = checkGamePassStatus()

if playerHasGamePass then
    -- Gracz ma Premium, pomijamy keysystem i od razu ładujemy skrypt.
    -- <--- TUTAJ WPROWADŹ URL SWOJEGO GŁÓWNEGO SKRYPTU! (np. "https://raw.githubusercontent.com/majka323pl/universal-scripts/refs/heads/main/scripts")
    loadstring(game:HttpGet("https://raw.githubusercontent.com/majka323pl/universal-scripts/refs/heads/main/scripts"))()
else
    -- Gracz nie ma Premium, pokazujemy keysystem GUI
    sendNotification("Klucz", "Wykryto brak Premium. Proszę wprowadzić klucz.")
    task.spawn(function()
        _G.ScreenGui = Instance.new("ScreenGui") -- Używamy _G.ScreenGui, aby była globalna
        _G.ScreenGui.Name = "PlatoboostKeySystem" -- Nadaj nazwę dla łatwiejszego zarządzania
        local Frame = Instance.new("Frame")
        local Topbar = Instance.new("Frame")
        local Exit = Instance.new("TextButton")
        local minimize = Instance.new("TextButton")
        local Frame_2 = Instance.new("Frame")
        local Getkey = Instance.new("TextButton")
        local Checkkey = Instance.new("TextButton")
        local TextBox = Instance.new("TextBox")
        local TextLabel = Instance.new("TextLabel")

        _G.ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
        _G.ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

        Frame.Parent = _G.ScreenGui
        Frame.BackgroundColor3 = Color3.fromRGB(76, 76, 76)
        Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Frame.BorderSizePixel = 0
        Frame.Position = UDim2.new(0.286729872, 0, 0.295880139, 0)
        Frame.Size = UDim2.new(0, 359, 0, 217)
        Frame.Active = true
        Frame.Draggable = true

        Topbar.Name = "Topbar"
        Topbar.Parent = Frame
        Topbar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        Topbar.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Topbar.BorderSizePixel = 0
        Topbar.Size = UDim2.new(0, 359, 0, 27)

        Exit.Name = "Exit"
        Exit.Parent = Topbar
        Exit.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        Exit.BackgroundTransparency = 0.300
        Exit.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Exit.BorderSizePixel = 0
        Exit.Position = UDim2.new(0.905292451, 0, 0.111111112, 0)
        Exit.Size = UDim2.new(0, 25, 0, 20)
        Exit.Font = Enum.Font.SourceSans
        Exit.Text = "X"
        Exit.TextColor3 = Color3.fromRGB(255, 255, 255)
        Exit.TextScaled = true
        Exit.TextSize = 14.000
        Exit.TextWrapped = true

        minimize.Name = "minimize"
        minimize.Parent = Topbar
        minimize.BackgroundColor3 = Color3.fromRGB(85, 255, 0)
        minimize.BackgroundTransparency = 0.300
        minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
        minimize.BorderSizePixel = 0
        minimize.Position = UDim2.new(0.810584962, 0, 0.111111112, 0)
        minimize.Size = UDim2.new(0, 25, 0, 20)
        minimize.Font = Enum.Font.SourceSans
        minimize.Text = "-"
        minimize.TextColor3 = Color3.fromRGB(255, 255, 255)
        minimize.TextScaled = true
        minimize.TextSize = 14.000
        minimize.TextWrapped = true

        Frame_2.Parent = Frame
        Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Frame_2.BackgroundTransparency = 1.000
        Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Frame_2.BorderSizePixel = 0
        Frame_2.Position = UDim2.new(0, 0, 0.124423966, 0)
        Frame_2.Size = UDim2.new(0, 359, 0, 189)

        Getkey.Name = "Getkey"
        Getkey.Parent = Frame_2
        Getkey.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        Getkey.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Getkey.BorderSizePixel = 0
        Getkey.Position = UDim2.new(0.317548752, 0, 0.523809552, 0)
        Getkey.Size = UDim2.new(0, 130, 0, 32)
        Getkey.Font = Enum.Font.SourceSans
        Getkey.Text = "Getkey"
        Getkey.TextColor3 = Color3.fromRGB(255, 255, 255)
        Getkey.TextScaled = true
        Getkey.TextSize = 14.000
        Getkey.TextWrapped = true

        Checkkey.Name = "Checkkey"
        Checkkey.Parent = Frame_2
        Checkkey.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        Checkkey.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Checkkey.BorderSizePixel = 0
        Checkkey.Position = UDim2.new(0.317548752, 0, 0.767195761, 0)
        Checkkey.Size = UDim2.new(0, 130, 0, 32)
        Checkkey.Font = Enum.Font.SourceSans
        Checkkey.Text = "CheckKey"
        Checkkey.TextColor3 = Color3.fromRGB(255, 255, 255)
        Checkkey.TextScaled = true
        Checkkey.TextSize = 14.000
        Checkkey.TextWrapped = true

        TextBox.Parent = Frame_2
        TextBox.BackgroundColor3 = Color3.fromRGB(139, 139, 139)
        TextBox.BackgroundTransparency = 0.600
        TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextBox.BorderSizePixel = 0
        TextBox.Position = UDim2.new(0.0779944286, 0, 0.137566134, 0)
        TextBox.Size = UDim2.new(0, 304, 0, 42)
        TextBox.Font = Enum.Font.SourceSans
        TextBox.Text = ""
        TextBox.TextTransparency = 1
        TextBox.TextColor3 = Color3.fromRGB(0, 0, 0)
        TextBox.TextScaled = true
        TextBox.TextSize = 14.000
        TextBox.TextWrapped = true

        TextLabel = Instance.new("TextLabel")
        TextLabel.Parent = Frame_2
        TextLabel.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
        TextLabel.BackgroundTransparency = 1.000
        TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel.BorderSizePixel = 0
        TextLabel.Position = UDim2.new(0.0779944286, 0, 0.137566134, 0)
        TextLabel.Size = UDim2.new(0, 304, 0, 42)
        TextLabel.ZIndex = 2
        TextLabel.Font = Enum.Font.SourceSans
        TextLabel.Text = "In Put Your Key"
        TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextStrokeTransparency = 0.830
        TextLabel.TextTransparency = 0.550
        TextLabel.TextWrapped = true

        TextBox:GetPropertyChangedSignal("Text"):Connect(function()
            if TextBox.Text == "" then
                TextLabel.Text = "In Put Your Key"
            else
                TextLabel.Text = TextBox.Text
            end
        end)

        Checkkey.MouseButton1Down:Connect(function()
            if TextBox and TextBox.Text then
                local Verify = verifyKey(TextBox.Text)
                if Verify then
                    -- Klucz poprawny, ładujemy główny skrypt i niszczymy GUI.
                    -- <--- TUTAJ WPROWADŹ URL SWOJEGO GŁÓWNEGO SKRYPTU! (np. "https://raw.githubusercontent.com/majka323pl/universal-scripts/refs/heads/main/scripts")
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/majka323pl/universal-scripts/refs/heads/main/scripts"))()
                    if _G.ScreenGui then
                        _G.ScreenGui:Destroy()
                    end
                else
                    sendNotification("Klucz", "Wprowadzony klucz jest nieprawidłowy.")
                    print("Key Is invalid")
                end
            end
        end)

        Getkey.MouseButton1Down:Connect(function()
            copyLink()
        end)

        Exit.MouseButton1Down:Connect(function()
            if _G.ScreenGui then
                _G.ScreenGui:Destroy()
            end
        end)

        minimize.MouseButton1Down:Connect(function()
            if _G.ScreenGui then
                _G.ScreenGui.Enabled = false
            end
        end)

    end)
end
